{"title":"nginx配置文件详解","slug":"nginx配置文件详解","date":"2018-03-17T09:50:22.000Z","updated":"2018-03-17T09:57:25.269Z","comments":true,"path":"api/articles/nginx配置文件详解.json","photos":[],"link":"","excerpt":"nginx官方文档<br>nginx配置文件解释，做个记录，该文档摘抄自这里。和我的版本1.10.3 (Ubuntu)有一定出入，仅供参考","covers":null,"content":"<p><a href=\"https://www.nginx.com/resources/wiki/start/\" target=\"_blank\" rel=\"noopener\">nginx官方文档</a><br>nginx配置文件解释，做个记录，该文档摘抄自<a href=\"http://www.ha97.com/5194.html\" target=\"_blank\" rel=\"noopener\">这里</a>。和我的版本<code>1.10.3 (Ubuntu)</code>有一定出入，仅供参考</p>\n<a id=\"more\"></a>\n<pre class=\"line-numbers language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\" spellcheck=\"true\"># 定义Nginx运行的用户和用户组</span>\nuser www www;\n\n<span class=\"token comment\" spellcheck=\"true\"># nginx进程数， 建议设置为等于CPU总核心数。</span>\nworker_processes 8;\n\n<span class=\"token comment\" spellcheck=\"true\"># 全局错误日志定义类型，[debug | info | notice | warn | error | crit]</span>\nerror_log /\n    var / log / nginx / error.log info;\n\n<span class=\"token comment\" spellcheck=\"true\"># 进程文件</span>\npid /\n    var / run / nginx.pid;\n\n<span class=\"token comment\" spellcheck=\"true\"># 一个nginx进程打开的最多文件描述符数目， 理论值应该是最多打开文件数（ 系统的值ulimit - n） 与nginx进程数相除， 但是nginx分配请求并不均匀， 所以建议与ulimit - n的值保持一致。</span>\nworker_rlimit_nofile 65535;\n\n<span class=\"token comment\" spellcheck=\"true\"># 工作模式与连接数上限</span>\nevents <span class=\"token punctuation\">{</span>\n<span class=\"token comment\" spellcheck=\"true\"># 参考事件模型， use[kqueue | rtsig | epoll | /dev/poll | select | poll];epoll模型是Linux 2.6 以上版本内核中的高性能网络I / O模型， 如果跑在FreeBSD上面， 就用kqueue模型。</span>\n    use epoll;\n<span class=\"token comment\" spellcheck=\"true\"># 单个进程最大连接数（ 最大连接数 = 连接数 * 进程数）</span>\n    worker_connections 65535;\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\"># 设定http服务器</span>\nhttp <span class=\"token punctuation\">{</span>\n    include mime.types;<span class=\"token comment\" spellcheck=\"true\"># 文件扩展名与文件类型映射表</span>\n    default_type application / octet <span class=\"token punctuation\">-</span> stream;<span class=\"token comment\" spellcheck=\"true\"># 默认文件类型# charset utf - 8;# 默认编码</span>\n    server_names_hash_bucket_size 128;<span class=\"token comment\" spellcheck=\"true\"># 服务器名字的hash表大小</span>\n    client_header_buffer_size 32 k;<span class=\"token comment\" spellcheck=\"true\"># 上传文件大小限制</span>\n    large_client_header_buffers 4 64 k;<span class=\"token comment\" spellcheck=\"true\"># 设定请求缓</span>\n    client_max_body_size 8 m;<span class=\"token comment\" spellcheck=\"true\"># 设定请求缓</span>\n    sendfile on;<span class=\"token comment\" spellcheck=\"true\"># 开启高效文件传输模式， sendfile指令指定nginx是否调用sendfile函数来输出文件， 对于普通应用设为 on， 如果用来进行下载等应用磁盘IO重负载应用， 可设置为off， 以平衡磁盘与网络I / O处理速度， 降低系统的负载。 注意： 如果图片显示不正常把这个改成off。</span>\n    autoindex on;<span class=\"token comment\" spellcheck=\"true\"># 开启目录列表访问， 合适下载服务器， 默认关闭。</span>\n    tcp_nopush on;<span class=\"token comment\" spellcheck=\"true\"># 防止网络阻塞</span>\n    tcp_nodelay on;<span class=\"token comment\" spellcheck=\"true\"># 防止网络阻塞</span>\n    keepalive_timeout 120;<span class=\"token comment\" spellcheck=\"true\"># 长连接超时时间， 单位是秒</span>\n\n    <span class=\"token comment\" spellcheck=\"true\"># FastCGI相关参数是为了改善网站的性能： 减少资源占用， 提高访问速度。 下面参数看字面意思都能理解。</span>\n    fastcgi_connect_timeout 300;\n    fastcgi_send_timeout 300;\n    fastcgi_read_timeout 300;\n    fastcgi_buffer_size 64 k;\n    fastcgi_buffers 4 64 k;\n    fastcgi_busy_buffers_size 128 k;\n    fastcgi_temp_file_write_size 128 k;\n\n    <span class=\"token comment\" spellcheck=\"true\"># gzip模块设置</span>\n    gzip on;<span class=\"token comment\" spellcheck=\"true\"># 开启gzip压缩输出</span>\n    gzip_min_length 1 k;<span class=\"token comment\" spellcheck=\"true\"># 最小压缩文件大小</span>\n    gzip_buffers 4 16 k;<span class=\"token comment\" spellcheck=\"true\"># 压缩缓冲区</span>\n    gzip_http_version 1.0;<span class=\"token comment\" spellcheck=\"true\"># 压缩版本（ 默认1 .1， 前端如果是squid2 .5 请使用1 .0）</span>\n    gzip_comp_level 2;<span class=\"token comment\" spellcheck=\"true\"># 压缩等级</span>\n    gzip_types text / plain application / x <span class=\"token punctuation\">-</span> javascript text / css application / xml;<span class=\"token comment\" spellcheck=\"true\"># 压缩类型， 默认就已经包含text / html， 所以下面就不用再写了， 写上去也不会有问题， 但是会有一个warn。</span>\n    gzip_vary on;<span class=\"token comment\" spellcheck=\"true\"># limit_zone crawler $binary_remote_addr 10 m;# 开启限制IP连接数的时候需要使用</span>\n\n    upstream blog.ha97.com <span class=\"token punctuation\">{</span><span class=\"token comment\" spellcheck=\"true\"># upstream的负载均衡， weight是权重， 可以根据机器配置定义权重。 weigth参数表示权值， 权值越高被分配到的几率越大。</span>\n        server 192.168 .80 .121<span class=\"token punctuation\">:</span> 80 weight = 3;\n        server 192.168 .80 .122<span class=\"token punctuation\">:</span> 80 weight = 2;\n        server 192.168 .80 .123<span class=\"token punctuation\">:</span> 80 weight = 3;\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\"># 虚拟主机的配置</span>\n    server <span class=\"token punctuation\">{</span><span class=\"token comment\" spellcheck=\"true\"># 监听端口</span>\n        listen 80;<span class=\"token comment\" spellcheck=\"true\"># 域名可以有多个， 用空格隔开</span>\n        server_name www.ha97.com ha97.com;\n        index index.html index.htm index.php;\n        root / data / www / ha97;\n        location~.*\\.(php <span class=\"token punctuation\">|</span> php5) <span class=\"token punctuation\">?</span> $ <span class=\"token punctuation\">{</span>\n            fastcgi_pass 127.0 .0 .1<span class=\"token punctuation\">:</span> 9000;\n            fastcgi_index index.php;\n            include fastcgi.conf;\n        <span class=\"token punctuation\">}</span><span class=\"token comment\" spellcheck=\"true\"># 图片缓存时间设置</span>\n        location~.*\\.(gif <span class=\"token punctuation\">|</span> jpg <span class=\"token punctuation\">|</span> jpeg <span class=\"token punctuation\">|</span> png <span class=\"token punctuation\">|</span> bmp <span class=\"token punctuation\">|</span> swf) $ <span class=\"token punctuation\">{</span>\n            expires 10 d;\n        <span class=\"token punctuation\">}</span><span class=\"token comment\" spellcheck=\"true\"># JS和CSS缓存时间设置</span>\n        location~.*\\.(js <span class=\"token punctuation\">|</span> css) <span class=\"token punctuation\">?</span> $ <span class=\"token punctuation\">{</span>\n            expires 1 h;\n        <span class=\"token punctuation\">}</span><span class=\"token comment\" spellcheck=\"true\"># 日志格式设定</span>\n        log_format access '$remote_addr <span class=\"token punctuation\">-</span> $remote_user <span class=\"token punctuation\">[</span>$time_local<span class=\"token punctuation\">]</span> \"$request\" '\n        '$status $body_bytes_sent \"$http_referer\" '\n        '\"$http_user_agent\" $http_x_forwarded_for';<span class=\"token comment\" spellcheck=\"true\"># 定义本虚拟主机的访问日志</span>\n        access_log /\n            var / log / nginx / ha97access.log access;\n\n        <span class=\"token comment\" spellcheck=\"true\"># 对 \"/\"</span>\n        启用反向代理\n        location / <span class=\"token punctuation\">{</span>\n            proxy_pass http<span class=\"token punctuation\">:</span> //127.0.0.1<span class=\"token punctuation\">:</span>88;\n                proxy_redirect off;\n            proxy_set_header X <span class=\"token punctuation\">-</span> Real <span class=\"token punctuation\">-</span> IP $remote_addr;<span class=\"token comment\" spellcheck=\"true\">#后端的Web服务器可以通过X - Forwarded - For获取用户真实IP</span>\n            proxy_set_header X <span class=\"token punctuation\">-</span> Forwarded <span class=\"token punctuation\">-</span> For $proxy_add_x_forwarded_for;<span class=\"token comment\" spellcheck=\"true\">#以下是一些反向代理的配置， 可选。</span>\n            proxy_set_header Host $host;\n            client_max_body_size 10 m;<span class=\"token comment\" spellcheck=\"true\">#允许客户端请求的最大单文件字节数</span>\n            client_body_buffer_size 128 k;<span class=\"token comment\" spellcheck=\"true\">#缓冲区代理缓冲用户端请求的最大字节数，</span>\n            proxy_connect_timeout 90;<span class=\"token comment\" spellcheck=\"true\">#nginx跟后端服务器连接超时时间(代理连接超时)</span>\n            proxy_send_timeout 90;<span class=\"token comment\" spellcheck=\"true\">#后端服务器数据回传时间(代理发送超时)</span>\n            proxy_read_timeout 90;<span class=\"token comment\" spellcheck=\"true\">#连接成功后， 后端服务器响应时间(代理接收超时)</span>\n            proxy_buffer_size 4 k;<span class=\"token comment\" spellcheck=\"true\">#设置代理服务器（ nginx） 保存用户头信息的缓冲区大小</span>\n            proxy_buffers 4 32 k;<span class=\"token comment\" spellcheck=\"true\">#proxy_buffers缓冲区， 网页平均在32k以下的设置</span>\n            proxy_busy_buffers_size 64 k;<span class=\"token comment\" spellcheck=\"true\">#高负荷下缓冲大小（ proxy_buffers * 2）</span>\n            proxy_temp_file_write_size 64 k;<span class=\"token comment\" spellcheck=\"true\">#设定缓存文件夹大小， 大于这个值， 将从upstream服务器传</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\" spellcheck=\"true\"># 设定查看Nginx状态的地址</span>\n        location / NginxStatus <span class=\"token punctuation\">{</span>\n            stub_status on;\n            access_log on;\n            auth_basic \"NginxStatus\";\n            auth_basic_user_file conf / htpasswd;<span class=\"token comment\" spellcheck=\"true\"># htpasswd文件的内容可以用apache提供的htpasswd工具来产生。</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\" spellcheck=\"true\"># 本地动静分离反向代理配置# 所有jsp的页面均交由tomcat或resin处理</span>\n        location~.(jsp <span class=\"token punctuation\">|</span> jspx <span class=\"token punctuation\">|</span> do) <span class=\"token punctuation\">?</span> $ <span class=\"token punctuation\">{</span>\n            proxy_set_header Host $host;\n            proxy_set_header X <span class=\"token punctuation\">-</span> Real <span class=\"token punctuation\">-</span> IP $remote_addr;\n            proxy_set_header X <span class=\"token punctuation\">-</span> Forwarded <span class=\"token punctuation\">-</span> For $proxy_add_x_forwarded_for;\n            proxy_pass http<span class=\"token punctuation\">:</span> //127.0.0.1<span class=\"token punctuation\">:</span>8080;\n        <span class=\"token punctuation\">}</span><span class=\"token comment\" spellcheck=\"true\"># 所有静态文件由nginx直接读取不经过tomcat或resin</span>\n        location~.*.(htm <span class=\"token punctuation\">|</span> html <span class=\"token punctuation\">|</span> gif <span class=\"token punctuation\">|</span> jpg <span class=\"token punctuation\">|</span> jpeg <span class=\"token punctuation\">|</span> png <span class=\"token punctuation\">|</span> bmp <span class=\"token punctuation\">|</span> swf <span class=\"token punctuation\">|</span> ioc <span class=\"token punctuation\">|</span> rar <span class=\"token punctuation\">|</span> zip <span class=\"token punctuation\">|</span> txt <span class=\"token punctuation\">|</span> flv <span class=\"token punctuation\">|</span> mid <span class=\"token punctuation\">|</span> doc <span class=\"token punctuation\">|</span> ppt <span class=\"token punctuation\">|</span> pdf <span class=\"token punctuation\">|</span> xls <span class=\"token punctuation\">|</span> mp3 <span class=\"token punctuation\">|</span> wma) $ <span class=\"token punctuation\">{</span> expires 15 d; <span class=\"token punctuation\">}</span>\n        location~.*.(js <span class=\"token punctuation\">|</span> css) <span class=\"token punctuation\">?</span> $ <span class=\"token punctuation\">{</span> expires 1 h; <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","categories":[],"tags":[]}